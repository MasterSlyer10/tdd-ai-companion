{
  "name": "tdd-ai-companion",
  "displayName": "TDD AI Companion",
  "description": "AI-powered Test-Driven Development assistant",
  "version": "0.0.1",
  "repository": {
    "type": "git",
    "url": "https://github.com/MasterSlyer10/tdd-ai-companion.git"
  },
  "publisher": "TDD-AI-Companion",
  "engines": {
    "vscode": "^1.97.0"
  },
  "categories": [
    "Testing",
    "Other"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "tdd-ai-companion.setupProject",
        "title": "TDD AI: Setup Project"
      },
      {
        "command": "tdd-ai-companion.suggestTestCase",
        "title": "TDD AI: Suggest Test Case"
      },
      {
        "command": "tdd-ai-companion.updateSourceFiles",
        "title": "TDD AI: Update Source Files"
      },
      {
        "command": "tdd-ai-companion.updateTestFiles",
        "title": "TDD AI: Update Test Files"
      },
      {
        "command": "tdd-ai-companion.updateFeature",
        "title": "TDD AI: Update Current Feature"
      },
      {
        "command": "tdd-ai-companion.promptFeature",
        "title": "TDD AI: Define Feature"
      },
      {
        "command": "tdd-ai-companion.indexCodebase",
        "title": "TDD AI: Index Codebase for RAG"
      },
      {
        "command": "tdd-ai-companion.clearCodebaseIndex",
        "title": "TDD AI: Clear Codebase Index"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "tdd-ai-companion-sidebar",
          "title": "TDD AI Companion",
          "icon": "media/icon.svg"
        }
      ]
    },
    "views": {
      "tdd-ai-companion-sidebar": [
        {
          "type": "webview",
          "id": "tdd-ai-companion.sidebar",
          "name": "",
          "icon": "media/icon.svg"
        }
      ]
    },
    "configuration": {
      "title": "TDD AI Companion",
      "properties": {
        "tddAICompanion.geminiApiKey": {
          "type": "string",
          "default": "",
          "description": "API key for Google Gemini"
        },
        "tddAICompanion.pineconeApiKey": {
          "type": "string",
          "default": "",
          "description": "API key for Pinecone vector database"
        },
        "tddAICompanion.userId": {
          "type": "string",
          "default": "",
          "description": "Unique identifier for the user (automatically generated if not set)"
        },
        "tddAICompanion.autoIndexing": {
          "type": "boolean",
          "default": true,
          "description": "Enable automatic indexing of file changes"
        },
        "tddAICompanion.indexingStrategy": {
          "type": "string",
          "enum": [
            "incremental",
            "full",
            "smart"
          ],
          "default": "smart",
          "enumDescriptions": [
            "Only index changed files",
            "Reindex entire codebase on any change",
            "Intelligently choose between incremental and full indexing"
          ],
          "description": "Strategy for handling file changes in the index"
        },
        "tddAICompanion.indexingDelay": {
          "type": "number",
          "default": 2000,
          "minimum": 500,
          "maximum": 10000,
          "description": "Delay in milliseconds before indexing file changes (debounce)"
        },
        "tddAICompanion.maxIndexSize": {
          "type": "number",
          "default": 10000,
          "minimum": 1000,
          "maximum": 50000,
          "description": "Maximum number of chunks to maintain in the index"
        },
        "tddAICompanion.autoCleanup": {
          "type": "boolean",
          "default": true,
          "description": "Automatically clean up index when tasks are completed"
        },
        "tddAICompanion.cleanupThreshold": {
          "type": "number",
          "default": 30,
          "minimum": 1,
          "maximum": 365,
          "description": "Days after which to clean up old indexed content"
        },
        "tddAICompanion.indexIncludePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "**/*.ts",
            "**/*.js",
            "**/*.tsx",
            "**/*.jsx",
            "**/*.py",
            "**/*.java",
            "**/*.cs",
            "**/*.cpp",
            "**/*.c",
            "**/*.h"
          ],
          "description": "File patterns to include in automatic indexing"
        },
        "tddAICompanion.indexExcludePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "**/node_modules/**",
            "**/dist/**",
            "**/build/**",
            "**/.git/**",
            "**/coverage/**",
            "**/*.min.js",
            "**/*.test.*",
            "**/*.spec.*"
          ],
          "description": "File patterns to exclude from automatic indexing"
        },
        "tddAICompanion.enableProgressNotifications": {
          "type": "boolean",
          "default": true,
          "description": "Show progress notifications during indexing operations"
        },
        "tddAICompanion.enableLogging": {
          "type": "boolean",
          "default": true,
          "description": "Enable logging of user interactions and AI responses"
        },
        "tddAICompanion.logFileContent": {
          "type": "boolean",
          "default": false,
          "description": "Include full file content in logging (WARNING: may contain sensitive information)"
        },
        "tddAICompanion.logLevel": {
          "type": "string",
          "enum": [
            "minimal",
            "standard",
            "detailed"
          ],
          "default": "standard",
          "enumDescriptions": [
            "Only log essential events (suggestions, feedback)",
            "Log most user interactions and AI responses",
            "Log all events including file changes and detailed context"
          ],
          "description": "Level of detail for logging"
        },
        "tddAICompanion.batchSize": {
          "type": "number",
          "default": 15,
          "minimum": 5,
          "maximum": 50,
          "description": "Number of code chunks to process in each batch for embedding generation"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/sinon": "^17.0.3",
    "@types/vscode": "^1.97.0",
    "@typescript-eslint/eslint-plugin": "^8.22.0",
    "@typescript-eslint/parser": "^8.22.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.19.0",
    "sinon": "^17.0.1",
    "typescript": "^5.7.3"
  },
  "dependencies": {
    "@pinecone-database/pinecone": "^5.1.1",
    "@types/typescript": "^2.0.0",
    "@vscode/codicons": "^0.0.36",
    "typescript-parser": "^2.6.1"
  }
}
